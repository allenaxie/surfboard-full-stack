import Head from 'next/head';
import { useState, useEffect } from 'react';
import classes from '../styles/Home.module.scss';
import { Card, Row, Col, Modal, Form, BackTop } from 'antd';
import { NewMeetingTopicForm, EditMeetingTopicForm } from '../components';

const Home = ({ data }) => {
  const [form] = Form.useForm();

  const [agendaSelected, setAgendaSelected] = useState(false);
  const [topicsUpdated, setTopicsUpdated] = useState(-1);
  const [currentTopic, setCurrentTopic] = useState({});
  const [meetingTopics, setMeetingTopics] = useState(data);

  const [isModalVisible, setIsModalVisible] = useState(false);

  // fetch new topics whenever we create, edit, or delete a topic
  useEffect(() => {
    const getTopics = async () => {
      const res = await fetch(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/meetingTopics`, { method: 'GET' })
      const { data } = await res.json();
      setMeetingTopics(data);
    }
    getTopics();

  }, [topicsUpdated])

  const handleOk = () => {
    setIsModalVisible(false);
  }

  const handleCancel = () => {
    setIsModalVisible(false);
  }

  const handleCardClick = (topic, index) => {
    // set current active topic
    setCurrentTopic(topic);
    setAgendaSelected(true);
    // set input initial values
    form.setFieldsValue({
      title: topic.title,
      timeEstimate: topic.timeEstimate,
      description: topic.description,
    })
  }

  return (
    <div className={classes.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Row className={classes.contentContainer}>
        <Col
          xs={{ span: 24 }}
          lg={{ span: 12 }}
          className={classes.agendaCol}
        >
          <h1 className={classes.title}>Agenda</h1>
          <div className={classes.agendaBtnContainer}>
            <button onClick={() => setIsModalVisible(true)}>Add Agenda</button>
          </div>
          {meetingTopics.map((topic, index) => (
            <Card
              key={`${index}-${topic._id}`}
              className={classes.card}
              onClick={() => handleCardClick(topic, index)}
              title={`${index}. ${topic.title}`}
              extra={`${topic.timeEstimate} minutes`}
            >
              {topic.description}
            </Card>
          ))}
        </Col>
        <Col
          xs={{ span: 24 }}
          lg={{ span: 12 }}
          className={classes.editCol}
        >
          {agendaSelected ?
            <>
              <EditMeetingTopicForm currentTopic={currentTopic} form={form} setAgendaSelected={setAgendaSelected} agendaSelected={agendaSelected} topicsUpdated={topicsUpdated} setTopicsUpdated={setTopicsUpdated}/>
            </>
            :
            <>
            <h1 className={classes.title}> Select to edit</h1>
          </>
          }
        </Col>
      </Row>

      <Modal
        title="New Meeting Topic"
        visible={isModalVisible}
        onOk={handleOk}
        onCancel={handleCancel}
        footer={null}
      >
        <NewMeetingTopicForm setIsModalVisible={setIsModalVisible} agendaSelected={agendaSelected} setAgendaSelected={setAgendaSelected} topicsUpdated={topicsUpdated} setTopicsUpdated={setTopicsUpdated}/>
      </Modal>
      <BackTop/>
    </div>
  )
}

export default Home;

export async function getStaticProps(context) {
  const res = await fetch(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/meetingTopics`, { method: 'GET' })
  const { data } = await res.json();

  return {
    props: {
      data
    }
  }
} 